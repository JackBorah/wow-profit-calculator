# Generated by Django 4.0.4 on 2022-12-30 07:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BonusList',
            fields=[
                ('id', models.IntegerField(db_index=True, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ConnectedRealmsIndex',
            fields=[
                ('connected_realm_id', models.IntegerField(db_index=True, help_text='Id for the connected realms', primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ItemModifierKey',
            fields=[
                ('id', models.IntegerField(db_index=True, primary_key=True, serialize=False)),
                ('effect', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ItemTier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ModifierList',
            fields=[
                ('id', models.IntegerField(db_index=True, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='OptionalMaterialSlot',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('slot_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionIndex',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('region', models.CharField(help_text='North America, Europe, ...', max_length=30, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='SecondaryStat',
            fields=[
                ('id', models.IntegerField(db_index=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('modifier_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calculator.itemmodifierkey')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('profession_tier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calculator.professionindex')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('recipe_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calculator.recipecategory')),
            ],
        ),
        migrations.CreateModel(
            name='Realm',
            fields=[
                ('population', models.CharField(help_text='Low, Medium, High, Full', max_length=20)),
                ('realm_id', models.IntegerField(help_text='Realm specific id', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Ex: Illidan, Stormrage, ...', max_length=30)),
                ('timezone', models.CharField(max_length=40)),
                ('play_style', models.CharField(help_text='Normal, RP', max_length=7)),
                ('connected_realm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calculator.connectedrealmsindex')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calculator.region')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_quantity', models.IntegerField()),
                ('max_quantity', models.IntegerField()),
                ('item_tier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calculator.itemtier')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calculator.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='OptionalMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_name', models.CharField(max_length=100)),
                ('item_tier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calculator.itemtier')),
                ('slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calculator.optionalmaterialslot')),
            ],
        ),
        migrations.CreateModel(
            name='MaterialTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_value', models.IntegerField()),
                ('quality', models.IntegerField()),
                ('modifier_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calculator.itemmodifierkey')),
            ],
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=100)),
                ('quantity', models.IntegerField()),
                ('item_tier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calculator.itemtier')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calculator.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='ItemModifierValue',
            fields=[
                ('id', models.IntegerField(db_index=True, primary_key=True, serialize=False)),
                ('effect', models.TextField()),
                ('modifier_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calculator.itemmodifierkey')),
            ],
        ),
        migrations.AddField(
            model_name='itemmodifierkey',
            name='modifier_list',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calculator.modifierlist'),
        ),
        migrations.CreateModel(
            name='ItemBonus',
            fields=[
                ('id', models.IntegerField(db_index=True, primary_key=True, serialize=False)),
                ('effect', models.TextField()),
                ('value_0', models.IntegerField()),
                ('value_1', models.IntegerField()),
                ('value_2', models.IntegerField()),
                ('bonus_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calculator.bonuslist')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.IntegerField(db_index=True, primary_key=True, serialize=False)),
                ('vendor_buy_price', models.IntegerField(blank=True, null=True)),
                ('vendor_sell_price', models.IntegerField(blank=True, null=True)),
                ('vendor_buy_quantity', models.IntegerField(blank=True, null=True)),
                ('quality', models.CharField(blank=True, max_length=50, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('binding', models.CharField(blank=True, max_length=50, null=True)),
                ('item_tier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calculator.itemtier')),
            ],
        ),
        migrations.CreateModel(
            name='CraftingStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resourcefulness', models.IntegerField(blank=True, null=True)),
                ('inspiration', models.IntegerField(blank=True, null=True)),
                ('multicraft', models.IntegerField(blank=True, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calculator.item')),
            ],
        ),
        migrations.CreateModel(
            name='Auction',
            fields=[
                ('auction_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('buyout', models.BigIntegerField(blank=True, null=True)),
                ('quantity', models.IntegerField()),
                ('time_left', models.CharField(max_length=20)),
                ('timestamp', models.DateTimeField()),
                ('pet_level', models.IntegerField(blank=True, null=True)),
                ('bonus_list', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='calculator.bonuslist')),
                ('connected_realm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calculator.connectedrealmsindex')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calculator.item')),
                ('modifier_list', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='calculator.modifierlist')),
            ],
        ),
    ]
